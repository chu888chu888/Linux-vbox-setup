# process user/group
user www-data www-data;

# How many worker threads to run;
# "auto" sets it to the number of CPU cores available in the system, and
# offers the best performance. Don't set it higher than the number of CPU
# cores if changing this parameter.

# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
#	$ nproc
worker_processes auto;

# Number of file descriptors used for Nginx.
# Display maximum number of open file descriptors `cat /proc/sys/fs/file-max`
# show hard limit `ulimit -Hn`, soft limit `ulimit -Sn`
# Set to 128K
worker_rlimit_nofile 131072;

# The pid-file. It can be used for the kill-command to send signals to nginx
# eg: to reload the config: kill -HUP `cat /var/log/nginx.pid`
pid /var/run/nginx.pid;

# only log critical errors
error_log /var/log/nginx/error.log crit;

events {
	# determines how much clients will be served per worker
	# max clients = worker_connections * worker_processes
	# max clients is also limited by the number of socket connections available on the system (~64k)
	worker_connections 1024;

	# optmized to serve many clients with each thread, essential for linux
	use epoll;

	# accept as many connections as possible, may flood worker connections if set too low
	multi_accept on;
}

http {
	# Hide nginx version information.
	server_tokens off;

	# Define the MIME types for files.
	types_hash_max_size 1024;
	include /etc/nginx/mime.types;
	default_type text/plain;
	charset UTF-8;

	# Sendfile copies data between one FD and other from within the kernel.
	# More efficient than read() + write(), since the requires transferring
	# data to and from the user space.
	sendfile on;

	# Tcp_nopush causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames. This is useful for prepending headers before calling sendfile,
	# or for throughput optimization.
	tcp_nopush on;

	# don't buffer data-sends (disable Nagle algorithm).
	# Good for sending frequent small bursts of data in real time.
	tcp_nodelay off;

	# Buffers
	client_max_body_size 64M;

	# Buffer log writes to speed up IO, or disable them altogether
	access_log off;

	# How long to allow each connection to stay idle; longer values are better
	# for each individual client, particularly for SSL, but means that worker
	# connections are tied up longer. (Default: 65)
	keepalive_timeout 20;

	# FastCGI Cache
	include conf.d/fastcgi-cache.conf;

	# Compression
	include conf.d/gzip.conf;

	# Virtual Host Configs
	include sites-enabled/*.vhost;
}