# process user/group
user www-data;

# This number should be, at maximum, the number of CPU cores on your system.
# (since nginx doesn't benefit from more than one worker per CPU.)
#	$ nproc
worker_processes 1;

# Number of file descriptors used for Nginx.
# Display maximum number of open file descriptors `cat /proc/sys/fs/file-max`
# show hard limit `ulimit -Hn`, soft limit `ulimit -Sn`
worker_rlimit_nofile 4096;

# The pid-file. It can be used for the kill-command to send signals to nginx
# eg: to reload the config: kill -HUP `cat /var/log/nginx.pid`
pid /var/run/nginx.pid;

events {
	# determines how much clients will be served per worker
	# max clients = worker_connections * worker_processes
	# max clients is also limited by the number of socket connections available on the system (~64k)
	worker_connections 1024;

	# optmized to serve many clients with each thread, essential for linux
	use epoll;

	# accept as many connections as possible, may flood worker connections if set too low
	multi_accept on;
}

http {
	# Sendfile copies data between one FD and other from within the kernel.
	# More efficient than read() + write(), since the requires transferring
	# data to and from the user space.
	sendfile on;

	# Tcp_nopush causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames. This is useful for prepending headers before calling sendfile,
	# or for throughput optimization.
	tcp_nopush on;

	# don't buffer data-sends (disable Nagle algorithm).
	# Good for sending frequent small bursts of data in real time.
	tcp_nodelay on;

	# allow the server to close connection on non responding client, this will free up memory
	reset_timedout_connection on;

	# timeouts
	client_body_timeout 10;
	client_header_timeout 10;
	keepalive_timeout 10;
	send_timeout 10;

	# Use a SSL/TLS cache for SSL session resume.
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 10m;

	# Remove server version
	server_tokens off;

	# Buffers
	client_body_buffer_size 8K;
	client_header_buffer_size 1k;
	client_max_body_size 64M;
	large_client_header_buffers 2 1k;

	# Mime types
	types_hash_max_size 1024;
	include /etc/nginx/mime.types;
	default_type text/plain;

	# Caches information about open FDs, freqently accessed files.
	open_file_cache max=1000 inactive=20s;
	open_file_cache_valid 30s;
	open_file_cache_min_uses 2;
	open_file_cache_errors on;

	# Buffer log writes to speed up IO, or disable them altogether
	#access_log /var/log/nginx/access.log;
	access_log off;

	# only log critical errors
	error_log /var/log/nginx/error.log crit;

	# Gzip Settings
	gzip on;
	gzip_static on;
	gzip_comp_level 5;
	gzip_disable "msie6";
	gzip_types text/css text/plain text/javascript application/javascript application/xml;

	# Simple DDoS Defense
	# limit the number of connections per single IP
	#limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

	# limit the number of requests for a given session
	#limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;

	# Virtual Host Configs
	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*.vhost;
}